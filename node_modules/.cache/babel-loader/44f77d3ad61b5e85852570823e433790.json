{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G\\xF6zde\\\\Desktop\\\\pokedex-master\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pokemon from './Pokemon';\nimport pokemons from \"./data\";\nimport Summary from \"./Summary\";\n\nclass App extends React.Component {\n  //react.comp bir kütüphanedir. dahil edince istediğin componente ayırmayı sağlar.\n  constructor(props) {\n    super(props); //hazır gelir. kütüphaneden dolayı.\n\n    this.state = {\n      selectedPokemon: false\n    };\n    this.onPokemonClick = this.onPokemonClick.bind(this);\n  }\n\n  onPokemonClick(id) {\n    const selectedPokemon = pokemons.find(pokemon => {\n      return pokemon.id === id;\n    });\n    this.setState({\n      //find dan sonra tıkladığımız id ile data.js deki id birbirine eşitleniyor.o id bizim pokemonumuz oluyor.\n      selectedPokemon\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" \", this.state.selectedPokemon && React.createElement(Summary, Object.assign({}, this.state.selectedPokemon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), \"  \", pokemons.map(item => {\n      return React.createElement(Pokemon, Object.assign({}, item, {\n        onPokemonClick: this.onPokemonClick,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }), \" \");\n  }\n\n} //yukarda {...this.state.selectedPokemon}/>} kısmı bütün pokemonları seçer. map ile hepsini yazdırdık.\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Gözde/Desktop/pokedex-master/src/App.js"],"names":["React","Pokemon","pokemons","Summary","App","Component","constructor","props","state","selectedPokemon","onPokemonClick","bind","id","find","pokemon","setState","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAE;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CACD;;AACd,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AADR,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,cAAc,CAACE,EAAD,EAAK;AACf,UAAMH,eAAe,GAAGP,QAAQ,CAACW,IAAT,CAAeC,OAAD,IAAa;AAC/C,aAAOA,OAAO,CAACF,EAAR,KAAeA,EAAtB;AACH,KAFuB,CAAxB;AAGA,SAAKG,QAAL,CAAc;AAAE;AACZN,MAAAA;AADU,KAAd;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AACD,WAAS;AACD,MAAA,SAAS,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAED,KAAKR,KAAL,CAAWC,eAAX,IAA8B,oBAAE,OAAF,oBAAc,KAAKD,KAAL,CAAWC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAF7B,QAIGP,QAAQ,CAACe,GAAT,CAAcC,IAAD,IAAU;AACnB,aAAO,oBAAC,OAAD,oBAAaA,IAAb;AACP,QAAA,cAAc,EAAK,KAAKR,cADjB;AAEP,QAAA,GAAG,EAAKQ,IAAI,CAACN,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAIH,KALD,CAJH,MAAT;AAaC;;AAjCiB,C,CAmCtB;;;AACJ,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport Pokemon from './Pokemon';\nimport pokemons from \"./data\";\nimport Summary from \"./Summary\";\n\n\nclass App extends React.Component { //react.comp bir kütüphanedir. dahil edince istediğin componente ayırmayı sağlar.\n        constructor(props) {\n            super(props); //hazır gelir. kütüphaneden dolayı.\n            this.state = {\n                selectedPokemon: false\n            };\n\n            this.onPokemonClick = this.onPokemonClick.bind(this);\n        }\n\n        onPokemonClick(id) {\n            const selectedPokemon = pokemons.find((pokemon) => {\n                return pokemon.id === id;\n            });\n            this.setState({ //find dan sonra tıkladığımız id ile data.js deki id birbirine eşitleniyor.o id bizim pokemonumuz oluyor.\n                selectedPokemon\n            });\n        }\n\n        render() {\n                return ( <\n                    div className = \"App\" > {\n                        this.state.selectedPokemon && < Summary {...this.state.selectedPokemon }\n                        />}  {\n                            pokemons.map((item) => {\n                                return <Pokemon {...item }\n                                onPokemonClick = { this.onPokemonClick }\n                                key = { item.id }\n                                />\n                            })\n                        } <\n                        /div>\n                    );\n                }\n            }\n            //yukarda {...this.state.selectedPokemon}/>} kısmı bütün pokemonları seçer. map ile hepsini yazdırdık.\n        export default App;"]},"metadata":{},"sourceType":"module"}